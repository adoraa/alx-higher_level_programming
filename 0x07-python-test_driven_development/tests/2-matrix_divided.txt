The ``matrix_divided`` module
=============================
Divides all elements of a matrix.

Using ``matrix_divided``
------------------------

Importing the function from the module:
    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Checking for module docstring:
    >>> m = __import__("2-matrix_divided").__doc__
    >>> len(m) > 1
    True

Checking for function docstring:
    >>> f = __import__("2-matrix_divided").matrix_divided.__doc__
    >>> len(f) > 1
    True

Check for the correct division of each element in the matrix by the divisor:
    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

Check when the matrix is a list but not a list of lists:
    >>> matrix = [[1, 2, 3], [4, 5], [6, 7, 8]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

Check when each row of the matrix does not have the same size:
    >>> matrix = [1, 2, 3]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Check when the divisor is 0:
    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

Check when the divisor is not a number:
    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    >>> matrix_divided(matrix, '2')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number
